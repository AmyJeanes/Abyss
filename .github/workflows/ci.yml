name: CI
on:
  push:
    branches:
    - main
    - renovate/*
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      skipBuild:
        description: 'Skip Build (deploy only)'
        required: true
        default: 'false'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        lfs: true

    - name: Build Docker images
      run: |
        for appname in Abyss.Web; do
          app=`echo $appname | tr '[:upper:]' '[:lower:]'`
          echo "Building $appname docker"
          docker build -t $app -f "$appname/Dockerfile" .
        done
      if: github.event.inputs.skipBuild != 'true'
        
    - name: Push Docker images
      run: |
        echo $GITHUB_TOKEN | docker login ghcr.io --username MattJeanes --password-stdin
        for appname in Abyss.Web; do
          app=`echo $appname | tr '[:upper:]' '[:lower:]'`
          echo "Deploying $appname"
          docker tag $app ghcr.io/mattjeanes/abyss/$app:latest
          docker push ghcr.io/mattjeanes/abyss/$app:latest
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.ref == 'refs/heads/main' && github.event.inputs.skipBuild != 'true'
  deploy:
    if: github.ref == 'refs/heads/main'
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    
    - name: Checkout Infrastructure repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        repository: MattJeanes/Abyss-Infrastructure
        path: infrastructure
    
    - name: Azure Login
      uses: Azure/login@a65d910e8af852a8061c627c456678983e180302 # v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Kubernetes
      uses: Azure/aks-set-context@feeca6405be94202afcb1c395616ff29b1811b9f # v4
      with:
        resource-group: abyss
        cluster-name: abyss

    - name: Install Abyss
      run: |
        helm upgrade --install --wait --atomic --debug \
          abyss ./abyss \
          --namespace default \
          --set ingress.host="${{ vars.HOST }}" \
          --set env.secret.Authentication__Discord__ClientSecret="${{ secrets.DISCORD_CLIENTSECRET }}" \
          --set env.secret.Authentication__Google__ClientSecret="${{ secrets.GOOGLE_CLIENTSECRET }}" \
          --set env.secret.Authentication__Steam__ApplicationKey="${{ secrets.STEAM_APPLICATIONKEY }}" \
          --set env.secret.Azure__ClientSecret="${{ secrets.AZURE_CLIENTSECRET }}" \
          --set env.secret.Cloudflare__ApiKey="${{ secrets.CLOUDFLARE_APIKEY }}" \
          --set env.secret.Ovh__ClientId="${{ secrets.OVH_CLIENTID }}" \
          --set env.secret.Ovh__ClientSecret="${{ secrets.OVH_CLIENTSECRET }}" \
          --set env.secret.ConnectionStrings__Abyss="${{ secrets.DATABASECONNECTIONSTRING }}" \
          --set env.secret.Discord__Token="${{ secrets.DISCORD_TOKEN }}" \
          --set env.secret.GMod__ApiKey="${{ secrets.GMOD_APIKEY }}" \
          --set env.secret.Jwt__Key="${{ secrets.JWT_KEY }}" \
          --set env.secret.Pushover__ApiKey="${{ secrets.PUSHOVER_APIKEY }}" \
          --set env.secret.Pushover__UserKey="${{ secrets.PUSHOVER_USERKEY }}" \
          --set env.secret.Tumblr__ConsumerKey="${{ secrets.TUMBLR_CONSUMERKEY }}" \
          --set env.secret.Tumblr__ConsumerSecret="${{ secrets.TUMBLR_CONSUMERSECRET }}" \
          --set env.secret.Tumblr__Token="${{ secrets.TUMBLR_TOKEN }}" \
          --set env.secret.Tumblr__TokenSecret="${{ secrets.TUMBLR_TOKENSECRET }}" \
          --set env.secret.WebhookRelay__Relays__GitHub__Key="${{ secrets.WEBHOOKRELAY_GITHUB_KEY }}" \
          --set env.secret.WebhookRelay__Relays__GitHub__Urls__0="${{ secrets.WEBHOOKRELAY_GITHUB_URLS_0 }}" \
          --set env.secret.WebhookRelay__Relays__GitHub__Urls__1="${{ secrets.WEBHOOKRELAY_GITHUB_URLS_1 }}" \
          --set env.secret.WebhookRelay__Relays__GitLab__Key="${{ secrets.WEBHOOKRELAY_GITLAB_KEY }}" \
          --set env.secret.WebhookRelay__Relays__GitLab__Urls__0="${{ secrets.WEBHOOKRELAY_GITLAB_URLS_0 }}" \
          --set env.secret.WebhookRelay__Relays__GitLab__Urls__1="${{ secrets.WEBHOOKRELAY_GITLAB_URLS_1 }}" \
          --set env.normal.Authentication__Discord__ClientId="${{ vars.DISCORD_CLIENTID }}" \
          --set env.normal.Authentication__Google__ClientId="${{ vars.GOOGLE_CLIENTID }}" \
          --set env.normal.Azure__ClientId="${{ vars.AZURE_CLIENTID }}" \
          --set env.normal.Azure__SubscriptionId="${{ vars.AZURE_SUBSCRIPTIONID }}" \
          --set env.normal.Azure__TenantId="${{ vars.AZURE_TENANTID }}" \
          --set env.normal.Cloudflare__Email="${{ vars.CLOUDFLARE_EMAIL }}" \
          --set env.normal.Cloudflare__Zone="${{ vars.CLOUDFLARE_ZONE }}" \
          --set env.normal.GMod__BaseUrl="${{ vars.GMOD_BASEURL }}" \
          --set env.normal.QuoteOfTheDay__DiscordChannelId="${{ vars.QUOTEOFTHEDAY_DISCORDCHANNELID }}" \
          --set env.normal.Reminder__DiscordChannelId="${{ vars.REMINDER_DISCORDCHANNELID }}" \
          --set env.normal.TeamSpeak__Host="${{ vars.TEAMSPEAK_HOST }}" \
          --set env.normal.Tumblr__BlogName="${{ vars.TUMBLR_BLOGNAME }}" \
          --set env.normal.GPTClient__BaseUrl="${{ vars.GPTCLIENT_BASEURL }}"
      working-directory: charts
        
    - name: Wait for certificate to be ready
      run: ./WaitKubeCertificate.ps1 -Name "abyss-tls"
      shell: pwsh
      working-directory: infrastructure/scripts
